// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineShoppingCart_MVC.Data;

#nullable disable

namespace OnlineShoppingCart_MVC.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240206113755_forth")]
    partial class forth
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineShoppingCart_MVC.Models.Admin", b =>
                {
                    b.Property<int>("admin_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("admin_id"));

                    b.Property<string>("admin_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("admin_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("admin_id");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("OnlineShoppingCart_MVC.Models.Category", b =>
                {
                    b.Property<int>("category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("category_id"));

                    b.Property<string>("category_name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("category_id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("OnlineShoppingCart_MVC.Models.CategoryProduct", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("category_id")
                        .HasColumnType("int");

                    b.Property<int>("category_id1")
                        .HasColumnType("int");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("category_id1");

                    b.HasIndex("product_id");

                    b.ToTable("CategoryProduct");
                });

            modelBuilder.Entity("OnlineShoppingCart_MVC.Models.Product", b =>
                {
                    b.Property<int>("product_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("product_id"));

                    b.Property<int?>("category_id")
                        .HasColumnType("int");

                    b.Property<string>("product_description")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("product_description");

                    b.Property<string>("product_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("product_image");

                    b.Property<string>("product_mrp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("product_mrp");

                    b.Property<string>("product_name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("product_name");

                    b.Property<string>("product_offer_price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("offer_price");

                    b.Property<int>("product_quantity")
                        .HasColumnType("int")
                        .HasColumnName("product_quantity");

                    b.HasKey("product_id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("OnlineShoppingCart_MVC.Models.CategoryProduct", b =>
                {
                    b.HasOne("OnlineShoppingCart_MVC.Models.Category", "Category")
                        .WithMany("CategoryProduct")
                        .HasForeignKey("category_id1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineShoppingCart_MVC.Models.Product", "Product")
                        .WithMany("CategoryProduct")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OnlineShoppingCart_MVC.Models.Category", b =>
                {
                    b.Navigation("CategoryProduct");
                });

            modelBuilder.Entity("OnlineShoppingCart_MVC.Models.Product", b =>
                {
                    b.Navigation("CategoryProduct");
                });
#pragma warning restore 612, 618
        }
    }
}
